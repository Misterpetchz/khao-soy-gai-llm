import requests
import logging
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# API Keys
TYPHOON_API_KEY = os.getenv("TYPHOON_API_KEY")

def generate_with_typhoon(query, recommendations):
    """
    Generate a response using the Typhoon model.
    """
    # Construct a detailed prompt with the query and retrieved recommendations
    prompt = f"Query: {query}\n\nRetrieved Recommendations:\n"
    for idx, recommendation in enumerate(recommendations, 1):
        prompt += f"{idx}. {recommendation['name']} at {recommendation['address']}\n"
        prompt += f"   About Summary: {recommendation['editorial_summary']}\n"
        prompt += f"   Types: {recommendation['types']}\n"
        prompt += f"   Rating: {recommendation['rating']} (Total User Ratings: {recommendation['user_ratings_total']})\n"
        prompt += f"   Price Level: {recommendation['price_level']}\n"
        prompt += f"   Opening Hours: {recommendation['opening_hours']}\n"
        prompt += f"   Dine-in: {recommendation['dine_in']}\n"
        prompt += f"   Delivery: {recommendation['delivery']}\n"
        prompt += f"   Takeout: {recommendation['takeout']}\n"
        prompt += f"   Reviews: {recommendation['reviews'][:100]}{'...' if len(recommendation['reviews']) > 100 else ''}\n"
        # prompt += f"   Photo: {recommendation['photo_urls']}\n"
        prompt += f"   Google Map Link: {recommendation['google_maps_link']}\n\n"

    # Make a POST request to the Typhoon API
    try:
        response = requests.post(
            'https://api.opentyphoon.ai/v1/chat/completions',
            headers={
                'Content-Type': 'application/json',
                'Authorization': f'Bearer {TYPHOON_API_KEY}'
            },
            json={
                'model': 'typhoon-instruct',
                'messages': [
                    {
                        'role': 'system',
                        'content': (
                            "You are ChatMaps (แม่มณี)(MaeMaNee), a service that provides semantic map search recommendations for restaurants, food, cafe  in Chiang Mai (Thailand)."
                            "Users can inquire about restaurants, and you will provide a list of relevant recommendations with details such as names, addresses, ratings, hours, and what they serve or offer." 
                            "If the user query is unclear or results are not sufficiently relevant, you will attempt to refine the query by expanding its scope (e.g., if searching for restaurants in Chiang Mai, consider expanding to Thailand)." 
                            "If no relevant results can be found, inform the user that no relevant results are available and that your database is continually growing." 
                            "Be precise and ensure the recommendations match the user's intent as closely as possible." 
                            "**ALL** You must answer only in Thai." 
                            "**ALL** Always give google map link to user."
                            "When interacting with users, do not use phrases that indicate an apology."
                        )
                    },
                    {
                        'role': 'user',
                        'content': query
                    },
                    {
                        'role': 'user',
                        'content': prompt
                    }
                ],
                'max_tokens': 1024,
                'temperature': 0.7,
                'top_p': 1,
                'top_k': 50,
                'repetition_penalty': 1.15,
                'stream': False
            }
        )

        response.raise_for_status()  # Raise HTTPError for bad responses

        # Extract and return the content generated by the Typhoon model
        response_data = response.json()
        response_text = response_data['choices'][0]['message']['content']
        return response_text

    except requests.exceptions.RequestException as e:
        logging.error(f"Request to Typhoon API failed: {e}")
        return "An error occurred while communicating with the recommendation system. Please try again later."